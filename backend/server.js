const express = require('express');
const cors = require('cors');
const db = require('./models');

const authRoutes = require('./routes/auth');
const storeRoutes = require('./routes/stores');
const productRoutes = require('./routes/products');
const historyRoutes = require('./routes/history');

const app = express();
const PORT = process.env.PORT || 3000;

// ‚úÖ Middleware
app.use(cors());
app.use(express.json());

// ‚úÖ –ú–∞—Ä—à—Ä—É—Ç—ã
app.use('/auth', authRoutes);
app.use('/stores', storeRoutes);
app.use('/products', productRoutes);
app.use('/history', historyRoutes);

// ‚úÖ –ó–∞–ø—É—Å–∫ –∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã
(async () => {
  try {
    await db.sequelize.sync(); // –∏–ª–∏ { force: true } ‚Äî –µ—Å–ª–∏ –Ω—É–∂–Ω–æ –ø–µ—Ä–µ—Å–æ–∑–¥–∞—Ç—å
    console.log('üì¶ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞');

    app.listen(PORT, () => {
      console.log(`üöÄ –°–µ—Ä–≤–µ—Ä –∑–∞–ø—É—â–µ–Ω –Ω–∞ http://localhost:${PORT}`);
    });
  } catch (err) {
    console.error('‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ —Å–µ—Ä–≤–µ—Ä–∞:', err);
  }
})();
